{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    em: \"em\",\n    ol: \"ol\",\n    code: \"code\",\n    img: \"img\",\n    hr: \"hr\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"zkplayground-project\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#zkplayground-project\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"ZKPlayground Project\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"zkVaxCard\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Author: Fu-Chuan Chung @ swfLAB\\n感謝 @Paul review 此篇文章\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"目錄\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#目錄\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"目錄\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"前言\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"簡介\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Semaphore 介紹\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"zkVaxCard 系統設計\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"技術說明\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"遇到的瓶頸\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"結論\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"前言\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#前言\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"前言\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"前情提要：我們的原本主題想使用 SBT (Soul Bound Token) 、semaphore 及 Tornato Cash 背後之零知識證明技術，但後來因時間與能力問題更改成最後的專案。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ZKPlayground 是由以太坊基金會在背後推動的活動，內容包含講師教授零知識相關知識與應用，而本文會介紹關於 SWF Lab 參加成員 (Foodchain、yanlong、nooma、iver) 四人在此活動中完成的一項專案 - \", _jsx(_components.strong, {\n        children: \"zkVaxCard\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"簡介\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#簡介\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"簡介\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"zkVaxCard\"\n      }), \" 是一個可以幫助人們在「不揭露任何個人資訊如身分證字號、個人照片或健保卡卡號」之情況下「證明自己有接種過疫苗」之系統，以 React.js 為前端開發的框架、json-server 作為一個非常臨時的後端資料庫，並以 Semaphore protocol 作為其背後的零知識證明技術，同時參考了 semaphore 上的範例專案 - \", _jsx(_components.em, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/semaphore-protocol/boilerplate\",\n          children: \"Bolierplate\"\n        })\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"本文將不深入 semaphore 中 circom 電路與其原理，只會講述如何使用 semaphore 套件與套件中用到的 javascript 語法等。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"semaphore\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#semaphore\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Semaphore\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://semaphore.appliedzkp.org/\",\n        children: \"Semaphore\"\n      }), \" 是在以太坊生態上開發的 ZKP 相關 project 之一，可以透過 ZKP 來完成身份的認證。\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"private: 🌚\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"public: 🌝\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在 semaphore 中有幾個重要的元素：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"identity\"\n        }), \"：一組身份，其中由三個部分組成： 🌚 nullifier、🌚 trapdoor 與 🌝 commitment。可以把它想像成在 Ethereum 上的一個私鑰 (nullifier & trapdoor) 與地址 (commitment) 的關係。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Group\"\n        }), \"：semaphore 利用 incremental binary Merkle Tree，來儲存在某一團體中的每一個身份 (意指每一個 Merkle Leaf 都是一個 \", _jsx(_components.code, {\n          children: \"identity\"\n        }), \") 。在鏈上，每一棵樹都會擁有自己的編號 (group id) 與樹高 (tree depth) 。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"ZKproof\"\n        }), \"：擁有 identity 並且加入一組 group 後，便可以用 circuit 來計算出一段 ZKproof。透過傳送這段 proof 到鏈上的合約，便可以「\", _jsx(_components.strong, {\n          children: \"不揭露自己的地址\"\n        }), \"」但卻能「\", _jsx(_components.strong, {\n          children: \"證明自己是存在於某個團體之中\"\n        }), \"」\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Semaphore 已經用 circom 寫好他們的 circuit，詳見 \", _jsx(_components.em, {\n        children: \"fig. 1\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"https://i.imgur.com/5sKw3Uo.png\",\n        alt: \"\"\n      }), \"\\nfig. 1 Circuits in semaphore by \", _jsx(_components.a, {\n        href: \"https://github.com/cedoor\",\n        children: \"Cedoor\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"舉例來說，semaphore 可以用來建立一個投票系統：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"投票者可以透過 semaphore 取得一組 🌚 \", _jsx(_components.code, {\n        children: \"identity\"\n      }), \" (\", _jsx(_components.code, {\n        children: \"nullifier\"\n      }), \" & \", _jsx(_components.code, {\n        children: \"trapdoor\"\n      }), \") ，利用一串 secret 計算出一個 🌝 commitment，並將此 🌝 commitment 存入在鏈上的 Merkle Tree (Group) ，同時計算出一個新的 Merkle Root。接著，當投票的時候，投票者則需要透過 semaphore 產生出 ZKProof，隨後將投票資訊、groupId、Merkle Root、ZKproof 等資料提交到在鏈上的 \", _jsx(_components.code, {\n        children: \"verifyProof()\"\n      }), \"，便可以驗證投票者的身份，並在鏈上公開的紀錄投票結果了。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Semaphore 也利用了一個變數 external nullifier 來避免 double signaling  (例：同一組身份但是投兩次票) 的問題，可以把它想像成在 ethereum 交易中的 nonce。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"verication-flow\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#verication-flow\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Verication Flow\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"接著來說明 zkVaxCard 的系統流程，可參考 \", _jsx(_components.em, {\n        children: \"fig. 2\"\n      }), \"。\\n\", _jsx(_components.img, {\n        src: \"https://i.imgur.com/PcyT88T.png\",\n        alt: \"\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"fig. 2 System design of zkVaxCard\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"整個系統我們分成兩個部分：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"注射的醫師或單位 (Doctor/ Government) ：醫生在進行注射後需要將接種者加進對應的 group 中。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"接種者 (Vaxxer) ：想要提出自己有接種過疫苗的人。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"在我們的疫苗注射卡上面會有醫院證明、醫師蓋章等資訊來證實這張卡的真偽；另外也避免一般人也可以隨意 \", _jsx(_components.code, {\n          children: \"addMember()\"\n        }), \" 的情況，因此需要由認證後醫師的 address 才能執行 \", _jsx(_components.code, {\n          children: \"addMember()\"\n        }), \"。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"步驟\"\n      }), \" (參考 \", _jsx(_components.em, {\n        children: \"fig. 2\"\n      }), \" 中的 \", _jsx(_components.strong, {\n        children: \"Step 1 ~ 8\"\n      }), \") ：\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"前提：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"醫師端需要設定一組白名單 (裡面會存放 Ethereum 上的 address) 。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"下面的故事發生在一個接種者打完疫苗後。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"醫師登入自己的 address，透過白名單認證後便可以執行。\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"醫師會請接種者輸入一串只有自己知道的密碼 (帳號為身分證字號) ，系統會講這串資訊 parse 並進行 hash，得到 h，製造一組新的 \", _jsx(_components.code, {\n          children: \"Identity(h)\"\n        }), \"。 (像是在銀行設定提款機密碼一樣)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"醫師按下 \", _jsx(_components.code, {\n          children: \"addMember\"\n        }), \" 的按鈕，此時由 semaphore 計算得到的 commitment 會送到已建立的合約中，存放在鏈上的對應的 Merkle Tree。\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"同時我們的 database 中也會儲存關於此 commitment 的資訊 (包含 groupId、nonce、commitment) 。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"當接種者想要提出證明時，會輸入自己的帳號密碼，zkVaxCard 會透過儲存的資訊來檢查是否有這組 identity。\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"認證 identity 後，會透過一組存在系統中的私鑰來與鏈上合約進行交易 (此步的目的是為了不揭露接種者地址) ，傳送 groupId、Merkle Root、ZKproof 等資訊到 \", _jsx(_components.code, {\n          children: \"verify()\"\n        }), \" 中進行驗證。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"透過 semaphore 的 \", _jsx(_components.code, {\n          children: \"verifyProof()\"\n        }), \"，可以進行此 identity 是否在 group 的驗證，若成功 (回傳 True) ，則顯示 Successfully Verified。\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"驗證者 (像是店家或政府機關) 則可以參考驗證成功的畫面進行驗證。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"技術解析\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#技術解析\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"技術解析\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"這部分會依循上方的順序，解釋在其中做了什麼事。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"password--identity\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#password--identity\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.strong, {\n        children: \"password & identity\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在使用者輸入密碼時，我們會用下面的方法將這串資訊轉換成 hash 值：\\n\", _jsxs(_components.em, {\n        children: [\"in \", _jsx(_components.code, {\n          children: \"doctorModal.js\"\n        })]\n      }), \"：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" beforeHash \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" addId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"concat\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"password\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"let\"\n          }), \" seed \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"keccak256\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"beforeHash\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"toString\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"hex\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"並將其值直接在 constructor 送入 \", _jsx(_components.code, {\n        children: \"Identity\"\n      }), \" 中，製作出一串屬於接種者自己的 identity。\\n\", _jsxs(_components.em, {\n        children: [\"in \", _jsx(_components.code, {\n          children: \"useVax()\"\n        })]\n      }), \"：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword module\",\n            children: \"import\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token imports\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"Identity\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword module\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"@semaphore-protocol/identity\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" identity \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Identity\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"seed\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" identityCommitment \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" identity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"generateCommitment\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"toString\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// V3 的 commitment 則是直接存在 Identity object 中\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// ex: const {nullifier, trapdoor, commitment} = new Identity(seed);\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這樣的做法有兩個主要目的：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"使用者每次都可以使用自己記得住的密碼來做 verify。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"使用者不需要記住兩串很長的字串 (nullifier 與 trapdoor 兩者都是 bytes31)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"add-member-into-onchain-merkle-tree-group\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#add-member-into-onchain-merkle-tree-group\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.strong, {\n        children: \"Add member into onchain merkle tree (group)\"\n      })]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"在合約部署到鏈上時，會先在 consturctor 中建立五個 group。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"隨後醫師將接種者加入 group 時，會呼叫在鏈上合約中的 \", _jsx(_components.code, {\n        children: \"joinGroup()\"\n      }), \"：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-solidity\",\n      children: _jsxs(_components.code, {\n        className: \"language-solidity code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"joinGroup\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"uint256\"\n          }), \" identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"bytes32\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"uint256\"\n          }), \" groupId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"external\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    semaphore\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"addMember\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"==\"\n          }), \" vacId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"emit\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NewVaccinater1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"else\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"==\"\n          }), \" vacId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"emit\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NewVaccinater2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"else\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"==\"\n          }), \" vacId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"emit\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NewVaccinater3\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"else\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"==\"\n          }), \" vacId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"emit\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NewVaccinater4\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"else\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"groupId \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"==\"\n          }), \" vacId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"emit\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NewVaccinater5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在鏈下傳送交易：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" transaction \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" contract\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"joinGroup\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  identityCommitment\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  utils\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"formatBytes32String\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"seed\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  groupId\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"doze \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" transaction\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"wait\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"database-json-server\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#database-json-server\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.strong, {\n        children: \"database (json-server)\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"後端的部分我們做了一個很簡單的 json-server，就是直接利用 cli 來跑一個本地的 port。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"$ \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" json-server db.json \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"--port\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4000\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" run v1.22.19\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"$ /Users/foodchain/Documents/swf_lab/ZKP/zkVaxCard/frontend/node_modules/.bin/json-server db.json \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"--port\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4000\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"^_^\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"/ hi\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"!\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  Loading db.json\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  Done\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  Resources\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  http://localhost:4000/vac\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  Home\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  http://localhost:4000\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  Type s + enter at any \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"time\"\n          }), \" to create a snapshot of the database\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在 json file 中，每組資料會紀錄：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"commitment：透過 seed 產生的 commitment。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"nonce：作為 external 傳入的變數。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"id：代表會存入鏈上的哪一個 groupId。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"每次醫師加入一組 commitment 到鏈上時，也同時會將資訊更新在此處。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"verify\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#verify\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.strong, {\n        children: \"Verify\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"需要輸入 \", _jsx(_components.code, {\n        children: \"verify()\"\n      }), \" 的參數有:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"message\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Merkle Root\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"nullifierHash\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ZKProof\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"下面我們就用盡洪荒之力生出這幾個參數 (？) ，但其實其中最重要的就是 \", _jsx(_components.strong, {\n        children: \"Merkle Root\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"這邊的方法由 @ChiHaoLu 提供 🙏：\\n首先要去 Goerli (你部署的鏈) 上的 semaphore 合約 (在 Goerli 為\", _jsx(_components.a, {\n        href: \"https://goerli.etherscan.io/address/0x5259d32659F1806ccAfcE593ED5a89eBAb85262f\",\n        children: \"0x5259d32659F1806ccAfcE593ED5a89eBAb85262f\"\n      }), \") 。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"透過 ABI 來取得 function selector，並取得其 Merkle Root：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" s \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Contract\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"0x5259d32659F1806ccAfcE593ED5a89eBAb85262f\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"inputs\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"internalType\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"uint256\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"name\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"groupId\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"uint256\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"name\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"getMerkleTreeRoot\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"outputs\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"internalType\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"uint256\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"name\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"uint256\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"stateMutability\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"view\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token string-property property\",\n            children: \"\\\"type\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"function\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" signer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" merkleRoot \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" s\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"getMerkleTreeRoot\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"groupId\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 輸入你傳入的 groupId\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"隨後便可以傳到鏈上進行驗證了：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// verify on chain\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" transaction \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" contract\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"verify\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  message\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  root\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"toString\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  nullifierHash\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  solidityProof\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" transaction\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"wait\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// update external nullifier\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" axios\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"put\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"/vac/\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"data\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"data\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"[\"\n              }), _jsx(_components.span, {\n                className: \"token number\",\n                children: \"0\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"]\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"id\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"nonce\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" externalNullifier \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但同時也需要更新在 json-server 中的 nonce。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"技術瓶頸\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#技術瓶頸\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"技術瓶頸\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"這段會簡述一下我們在開發中遇到的一些問題，希望未來可以不要再撞同樣的牆。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"double-signaling：\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#double-signaling：\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Double Signaling：\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在研究 semaphore 的範例專案時，我們發現無法透過相同的 identity 驗證兩次，這是因為防止 double signaling 的問題。在 semaphore 中是透過 external nullifier 來限制的，因此只要每次傳入 verify 時都傳入不同的 external nullifier 便可以完成「\", _jsx(_components.strong, {\n        children: \"同一組 identity 重複的驗證\"\n      }), \"」。\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"groupid：\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#groupid：\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"GroupId：\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在建立 group 時，需要傳入 groupId。但常常傳入的 groupId 已經被別人用過了，因此需要找到一組別人沒使用過的 groupId。\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"merkle-root：\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#merkle-root：\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Merkle Root：\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"原本我們參照 \", _jsx(_components.code, {\n        children: \"Bolierplate\"\n      }), \"，其中使用 \", _jsx(_components.code, {\n        children: \"generateProof()\"\n      }), \" 來產生 proof、merkleTreeRoot、nullifierHash 等。\\n\", _jsxs(_components.em, {\n        children: [\"in \", _jsx(_components.a, {\n          href: \"https://github.com/semaphore-protocol/boilerplate/blob/main/apps/web-app/src/pages/proofs.tsx#L65\",\n          children: \"Boilerplate/apps/web-app/src/pages/proof.tsx\"\n        })]\n      }), \"：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" proof\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" merkleTreeRoot\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" nullifierHash \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"generateProof\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  _identity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  group\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"GROUP_ID\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  feedbackBytes32\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但實測後發現它回傳的 MerkleRoot 是錯的，因此使用上一段的方法。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"結論\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#結論\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"結論\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"雖然在已經開放後的台灣，zkVaxCard 似乎有點過時，但是我認爲它也可以應用在一些其他的領域，像是財產證明、修課證書、能力證書、會員制度等。可以不洩漏使用者的隱私 (像是銀行帳號) ，提出具有公信力的證明。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"另外我認為 password 更安全的做法是利用一組 EdDSA/EcDSA 產生的私鑰，將自己設定的密碼做簽章，並將此作為 seed，但是在開發上可能須考慮\", _jsx(_components.strong, {\n        children: \"便利性問題\"\n      }), \" (如使用者需要記住的東西有多少) ，才能\", _jsx(_components.strong, {\n        children: \"真正讓這些應用實施在現實生活中\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"references\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#references\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"References\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://medium.com/swf-lab/zk-app-client-implementation-with-semaphore-431e49dc32b8\",\n          children: \"ZK-App Client Implementation with Semaphore\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"zkVaxCard","description":"zkVaxCard 是一個可以幫助人們在「不揭露任何個人資訊如身分證字號、個人照片或健保卡卡號」之情況下「證明自己有接種過疫苗」之系統，以 React.js 為前端開發的框架、json-server 作為一個非常臨時的後端資料庫，並以 Semaphore protocol 作為其背後的零知識證明技術。","date":"2023-02-08"}},"frontMatter":{"title":"zkVaxCard","description":"zkVaxCard 是一個可以幫助人們在「不揭露任何個人資訊如身分證字號、個人照片或健保卡卡號」之情況下「證明自己有接種過疫苗」之系統，以 React.js 為前端開發的框架、json-server 作為一個非常臨時的後端資料庫，並以 Semaphore protocol 作為其背後的零知識證明技術。","date":"2023-02-08"}},"__N_SSG":true}